Prime numbers are numbers that have only 2 factors. Similarly, Armstrong number is a number that is equal to the sum of nth power of the digits of a n-bit number.
Example: Armstrong Number 153 = 13 + 53 + 33 = 1+125+27

We have to verify that the given number should be both prime & armstrong. If a number satisfy the basic definition of both print “Y” else print ”N” in the output.

Input Format
Accept a n-bit number as an input.

Constraints
1 <= n <= 4

Output Format
Print either “Y” or “N” as output.

Sample Input 0
1

Sample Output 0
Y
----------------------------------------
import java.util.Scanner;
public class Solution {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int no = sc.nextInt();

		boolean primeNo = false, armstrongNo = false;
		int primeCount = 0;
		for (int i = 1; i <= (no / 2); i++) 
			if (no % i == 0) 
				primeCount++;

		if (primeCount < 2)
			primeNo = true;

		int q = no, r = 0, sum = 0;
		int i = 0;
		while (i < 4) {
			r = q % 10;
			q = q / 10;
			sum += r * r * r;
			i++;
		}
		if (sum == no)
			armstrongNo = true;

		if (primeNo && armstrongNo)
			System.out.println("Y");
		else
			System.out.println("N");
	}
}
